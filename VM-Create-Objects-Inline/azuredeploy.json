{
    "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmConfig": {
            "type": "array",
            "metadata": {
                "description": "description"
            }
        }
    },
    "functions": [],
    "variables": {},
    "resources": [
        {
            "name": "[concat('InlineDeployments',copyIndex())]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "resourceGroup": "[parameters('vmConfig')[copyIndex()].existingRGName]",
            "copy": {
                "name": "vmConfigs",
                "count": "[length(parameters('vmConfig'))]",
                "mode": "Serial"
            },
            "properties": {
                "mode": "Incremental",
                "expressionEvaluationOptions": {
                    "scope": "inner"
                },
                "parameters": {
                    "vmConfigs": {
                        "value": "[parameters('vmConfig')[copyIndex()]]"
                    },
                    "localAdminPassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('vmConfig')[copyIndex()].vaultRGName,'/providers/Microsoft.KeyVault/vaults/',parameters('vmConfig')[copyIndex()].vaultName)]"
                            },
                            "secretName": "[parameters('vmConfig')[copyIndex()].localAdminPassword]"
                        }
                    },
                    "domainAdminPassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[concat('/subscriptions/',subscription().subscriptionId,'/resourceGroups/',parameters('vmConfig')[copyIndex()].vaultRGName,'/providers/Microsoft.KeyVault/vaults/',parameters('vmConfig')[copyIndex()].vaultName)]"
                            },
                            "secretName": "[if(not(empty(parameters('vmConfig')[copyIndex()].domainJoin)), parameters('vmConfig')[copyIndex()].domainJoin['domainPassword'],parameters('vmConfig')[copyIndex()].localAdminPassword)]"
                        }
                    }
                },
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "vmConfigs": {
                            "type": "object",
                            "metadata": {
                                "description": "description"
                            }
                        },
                        "localAdminPassword": {
                            "type": "string",
                            "metadata": {
                                "description": "description"
                            }
                        },
                        "domainAdminPassword": {
                            "type": "securestring"
                        }
                    },
                    "variables": {
                        "publicIPName":"[concat('pip-',parameters('vmConfigs').vmName)]",
                        "copy":[
                            {
                                "name":"PublicIPIDArray",
                                "count":"[parameters('vmConfigs').noOfVMs]",
                                "input":{
                                    "id":"[concat(variables('publicIPID'),'',padLeft(copyIndex('PublicIPIDArray',parameters('vmConfigs').vmIndex),2,'0'))]"
                                }
                            }
                        ],
                        "publicIPID":"[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]",
                        "nicName": "[concat('nic-',parameters('vmConfigs').vmName)]",
                        "nicID": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]",
                        "osDiskName": "[concat('osdisk-',parameters('vmConfigs').vmName)]",
                        "vnetID": "[resourceId(parameters('vmConfigs').existingVnetRGName,'Microsoft.Network/virtualNetworks',parameters('vmConfigs').existingVnetName)]",
                        "subnetID": "[concat(variables('vnetID'),'/subnets/',parameters('vmConfigs').existingSubnetName)]",
                        "avsetID": {
                            "id":"[resourceId('Microsoft.Compute/availabilitySets',parameters('vmConfigs').avsetName)]"
                        },
                        "dataDiskPrefix": "[concat('datadisk-',parameters('vmConfigs').vmName)]",
                        "diagnosticsProfile":{
                            "bootDiagnostics":{
                                "enabled": true,
                                "storageUri":"[concat('https://', parameters('vmConfigs').diagStorageAccountName, '.blob.core.windows.net')]"
                            }
                        }
                    },
                    "resources": [
                        {
                            "condition":"[not(empty(parameters('vmConfigs').diagStorageAccountName))]",
                            "name": "[if(not(empty(parameters('vmConfigs').diagStorageAccountName)),parameters('vmConfigs').diagStorageAccountName,'dummy')]",
                            "type": "Microsoft.Storage/storageAccounts",
                            "apiVersion": "2019-06-01",
                            "tags": {},
                            "location": "[resourceGroup().location]",
                            "kind": "StorageV2",
                            "sku": {
                                "name": "Standard_LRS"
                            }
                        },
                        {
                            "condition": "[not(empty(parameters('vmConfigs').publicIP))]",
                            "name": "[concat(variables('publicIPName'),padLeft(copyIndex(parameters('vmConfigs').vmIndex),2,'0'))]",
                            "type": "Microsoft.Network/publicIPAddresses",
                            "apiVersion": "2019-11-01",
                            "copy":{
                                "name": "Pips",
                                "count":"[parameters('vmConfigs').noOfVMs]"
                            },
                            "location": "[parameters('vmConfigs').location]",
                            "tags": {},
                            "properties": {
                                "publicIPAllocationMethod": "[parameters('vmConfigs').publicIP['publicIPAllocationMethod']]"
                            }
                        },
                        {
                            "condition": "[not(empty(parameters('vmConfigs').avsetName))]",
                            "name": "[if(not(empty(parameters('vmConfigs').avsetName)),parameters('vmConfigs').avsetName,'dummy')]",
                            "type": "Microsoft.Compute/availabilitySets",
                            "apiVersion": "2019-07-01",
                            "location": "[parameters('vmConfigs').location]",
                            "tags": {},
                            "properties": {
                                "platformFaultDomainCount": 2,
                                "platformUpdateDomainCount": 5
                            },
                            "sku": {
                                "name": "Aligned"
                            }
                        },
                        {
                            "name": "[concat(variables('nicName'),padLeft(copyIndex(parameters('vmConfigs').vmIndex),2,'0'))]",
                            "type": "Microsoft.Network/networkInterfaces",
                            "apiVersion": "2019-11-01",
                            "copy": {
                                "name": "Nics",
                                "count": "[parameters('vmConfigs').noOfVMs]"
                            },
                            "location": "[parameters('vmConfigs').location]",
                            "tags": {},
                            "dependsOn": [
                                "Pips"
                            ],
                            "properties": {
                                "ipConfigurations": [
                                    {
                                        "name": "ipConfig1",
                                        "properties": {
                                            "privateIPAllocationMethod": "Dynamic",
                                            "subnet": {
                                                "id": "[variables('subnetID')]"
                                            },
                                            "publicIPAddress": "[if(empty(parameters('vmConfigs').publicIP),json('null'),variables('PublicIPIDArray')[copyIndex('Nics')])]"
                                        }
                                    }
                                ]
                            }
                        },
                        {
                            "name": "[concat(parameters('vmConfigs').vmName,padLeft(copyIndex(parameters('vmConfigs').vmIndex),2,'0'))]",
                            "type": "Microsoft.Compute/virtualMachines",
                            "apiVersion": "2019-07-01",
                            "copy": {
                                "name": "VMs",
                                "count": "[parameters('vmConfigs').noOfVMs]"
                            },
                            "location": "[parameters('vmConfigs').location]",
                            "dependsOn": [
                                "Nics"
                            ],
                            "tags": {},
                            "properties": {
                                "hardwareProfile": {
                                    "vmSize": "[parameters('vmConfigs').vmSize]"
                                },
                                "osProfile": {
                                    "computerName": "[concat(parameters('vmConfigs').vmName,padLeft(copyIndex(parameters('vmConfigs').vmIndex),2,'0'))]",
                                    "adminUsername": "[parameters('vmConfigs').localAdminUsername]",
                                    "adminPassword": "[parameters('localAdminPassword')]"
                                },
                                "storageProfile": {
                                    "imageReference": {
                                        "publisher": "[parameters('vmConfigs').vmSku['publisher']]",
                                        "offer": "[parameters('vmConfigs').vmSku['offer']]",
                                        "sku": "[parameters('vmConfigs').vmSku['sku']]",
                                        "version": "latest"
                                    },
                                    "osDisk": {
                                        "name": "[concat(variables('osDiskName'),padLeft(copyIndex(parameters('vmConfigs').vmIndex),2,'0'))]",
                                        "createOption": "FromImage"
                                    },
                                    "copy": [
                                        {
                                            "name": "dataDisks",
                                            "count": "[length(parameters('vmConfigs').dataDiskSizeGB)]",
                                            "input": {
                                                "name": "[concat(variables('dataDiskPrefix'),padLeft(copyIndex(parameters('vmConfigs').vmIndex),2,'0'),'-',padLeft(add(copyIndex('dataDisks'),1),2,'0'))]",
                                                "diskSizeGB": "[parameters('vmConfigs').dataDiskSizeGB[copyIndex('dataDisks')]]",
                                                "lun": "[copyIndex('dataDisks')]",
                                                "createOption": "Empty",
                                                "managedDisk": {
                                                    "storageAccountType": "[parameters('vmConfigs').managedDiskType]"
                                                }
                                            }
                                        }
                                    ]
                                },
                                "networkProfile": {
                                    "networkInterfaces": [
                                        {
                                            "id": "[concat(variables('nicID'),'',padLeft(copyIndex(parameters('vmConfigs').vmIndex),2,'0'))]"
                                        }
                                    ]
                                },
                                "availabilitySet": "[if(empty(parameters('vmConfigs').avsetName), json('null'), variables('avSetID'))]",
                                "diagnosticsProfile":"[if(empty(parameters('vmConfigs').diagStorageAccountName),json('null'),variables('diagnosticsProfile'))]"
                            }
                        },
                        {
                            "condition": "[not(empty(parameters('vmConfigs').domainJoin))]",
                            "apiVersion": "2015-06-15",
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "name": "[concat(parameters('vmConfigs').vmName,padLeft(copyIndex(parameters('vmConfigs').vmIndex),2,'0'),'/joindomain')]",
                            "location": "[parameters('vmConfigs').location]",
                            "copy": {
                                "name": "DomainJoins",
                                "count": "[parameters('vmConfigs').noOfVMs]"
                            },
                            "dependsOn": [
                                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmConfigs').vmName,padLeft(copyIndex(parameters('vmConfigs').vmIndex),2,'0'))]"
                            ],
                            "properties": {
                                "publisher": "Microsoft.Compute",
                                "type": "JsonADDomainExtension",
                                "typeHandlerVersion": "1.3",
                                "autoUpgradeMinorVersion": true,
                                "settings": {
                                    "Name": "[parameters('vmConfigs').domainJoin['domainToJoin']]",
                                    "OUPath": "[parameters('vmConfigs').domainJoin['ouPath']]",
                                    "User": "[concat(parameters('vmConfigs').domainJoin['domainToJoin'], '\\', parameters('vmConfigs').domainJoin['domainUsername'])]",
                                    "Restart": "true",
                                    "Options": "[parameters('vmConfigs').domainJoin['domainJoinOptions']]"
                                },
                                "protectedSettings": {
                                    "Password": "[parameters('domainAdminPassword')]"
                                }
                            }
                        }
                    ],
                    "outputs": {}
                }
            }
        }
    ],
    "outputs": {}
}